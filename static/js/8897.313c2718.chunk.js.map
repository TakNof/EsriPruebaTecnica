{"version":3,"file":"static/js/8897.313c2718.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/action/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action/action.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action/action.scss?tag=calcite-action&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/browser.ts"],"sourcesContent":["export const CSS = {\n  button: \"button\",\n  buttonTextVisible: \"button--text-visible\",\n  buttonCompact: \"button--compact\",\n  indicatorText: \"indicator-text\",\n  iconContainer: \"icon-container\",\n  slotContainer: \"slot-container\",\n  slotContainerHidden: \"slot-container--hidden\",\n  textContainer: \"text-container\",\n  textContainerVisible: \"text-container--visible\",\n  indicatorWithIcon: \"indicator-with-icon\",\n  indicatorWithoutIcon: \"indicator-without-icon\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n};\n","import {\n  Build,\n  Component,\n  Element,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { getIconScale } from \"../../utils/component\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Alignment, Appearance, Scale } from \"../interfaces\";\nimport { ActionMessages } from \"./assets/action/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding a `calcite-icon`.\n * @slot tooltip - A slot for adding a `calcite-tooltip`.\n */\n@Component({\n  tag: \"calcite-action\",\n  styleUrl: \"action.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Action\n  implements InteractiveComponent, LocalizedComponent, T9nComponent, LoadableComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is highlighted.\n   */\n  @Prop({ reflect: true }) active = false;\n\n  /**\n   * Specifies the horizontal alignment of button elements with text content.\n   */\n  @Prop({ reflect: true }) alignment: Alignment;\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the side padding of the component is reduced. Compact mode is used internally by components, e.g. `calcite-block-section`.\n   */\n  @Prop({ reflect: true }) compact = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Specifies an icon to display. */\n  @Prop() icon: string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * When `true`, displays a visual indicator.\n   */\n  @Prop({ reflect: true }) indicator = false;\n\n  /**\n   * Specifies the label of the component. If no label is provided, the label inherits what's provided for the `text` prop.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies text that accompanies the icon.\n   */\n  @Prop() text!: string;\n\n  /**\n   * Indicates whether the text is displayed.\n   */\n  @Prop({ reflect: true }) textEnabled = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionElement;\n\n  buttonEl: HTMLButtonElement;\n\n  mutationObserver = createObserver(\"mutation\", () => forceUpdate(this));\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionMessages;\n\n  guid = `calcite-action-${guid()}`;\n\n  indicatorId = `${this.guid}-indicator`;\n\n  buttonId = `${this.guid}-button`;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    if (Build.isBrowser) {\n      await setUpMessages(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.mutationObserver?.disconnect();\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.buttonEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderTextContainer(): VNode {\n    const { text, textEnabled } = this;\n\n    const textContainerClasses = {\n      [CSS.textContainer]: true,\n      [CSS.textContainerVisible]: textEnabled,\n    };\n\n    return text ? (\n      <div class={textContainerClasses} key=\"text-container\">\n        {text}\n      </div>\n    ) : null;\n  }\n\n  renderIndicatorText(): VNode {\n    const { indicator, messages, indicatorId, buttonId } = this;\n    return (\n      <div\n        aria-labelledby={buttonId}\n        aria-live=\"polite\"\n        class={CSS.indicatorText}\n        id={indicatorId}\n        role=\"region\"\n      >\n        {indicator ? messages.indicator : null}\n      </div>\n    );\n  }\n\n  renderIconContainer(): VNode {\n    const { loading, icon, scale, el, iconFlipRtl, indicator } = this;\n    const loaderScale = scale === \"l\" ? \"l\" : \"m\";\n    const calciteLoaderNode = loading ? (\n      <calcite-loader inline label={this.messages.loading} scale={loaderScale} />\n    ) : null;\n    const calciteIconNode = icon ? (\n      <calcite-icon\n        class={{ [CSS.indicatorWithIcon]: indicator }}\n        flipRtl={iconFlipRtl}\n        icon={icon}\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const iconNode = calciteLoaderNode || calciteIconNode;\n    const hasIconToDisplay = iconNode || el.children?.length;\n\n    const slotContainerNode = (\n      <div\n        class={{\n          [CSS.slotContainer]: true,\n          [CSS.slotContainerHidden]: loading,\n        }}\n      >\n        <slot />\n      </div>\n    );\n\n    return hasIconToDisplay ? (\n      <div aria-hidden=\"true\" class={CSS.iconContainer} key=\"icon-container\">\n        {iconNode}\n        {slotContainerNode}\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const {\n      active,\n      compact,\n      disabled,\n      icon,\n      loading,\n      textEnabled,\n      label,\n      text,\n      indicator,\n      indicatorId,\n      buttonId,\n      messages,\n    } = this;\n    const ariaLabel = `${label || text}${indicator ? ` (${messages.indicator})` : \"\"}`;\n\n    const buttonClasses = {\n      [CSS.button]: true,\n      [CSS.buttonTextVisible]: textEnabled,\n      [CSS.buttonCompact]: compact,\n    };\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <button\n            aria-busy={toAriaBoolean(loading)}\n            aria-controls={indicator ? indicatorId : null}\n            aria-disabled={toAriaBoolean(disabled)}\n            aria-label={ariaLabel}\n            aria-pressed={toAriaBoolean(active)}\n            class={buttonClasses}\n            disabled={disabled}\n            id={buttonId}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(buttonEl): HTMLButtonElement => (this.buttonEl = buttonEl)}\n          >\n            {this.renderIconContainer()}\n            {this.renderTextContainer()}\n            {!icon && indicator && <div class={CSS.indicatorWithoutIcon} key=\"indicator-no-icon\" />}\n          </button>\n          <slot name={SLOTS.tooltip} onSlotchange={this.handleTooltipSlotChange} />\n          {this.renderIndicatorText()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el) => el?.matches(\"calcite-tooltip\")) as HTMLCalciteTooltipElement[];\n\n    const tooltip = tooltips[0];\n\n    if (tooltip) {\n      tooltip.referenceElement = this.buttonEl;\n    }\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-indicator-color: Specifies the color of the component's indicator.\n */\n\n:host {\n  @extend %component-host;\n  @apply flex bg-transparent;\n  --calcite-action-indicator-color: theme(\"colors.brand\");\n  --calcite-action-color-transparent-hover: var(--calcite-color-transparent-hover);\n  --calcite-action-color-transparent-press: var(--calcite-color-transparent-press);\n}\n\n@mixin action-indicator() {\n  position: relative;\n  &::after {\n    content: \"\";\n    @apply absolute\n      h-2\n      w-2\n      rounded-full;\n    inset-block-end: calc(-0.275rem);\n    inset-inline-end: calc(-0.275rem);\n    background-color: var(--calcite-action-indicator-color);\n  }\n}\n\n@include disabled();\n\n.button {\n  @apply bg-foreground-1\n    fill-color-3\n    focus-base\n    text-n2h\n    text-color-3\n    relative\n    m-0\n    flex\n    w-auto\n    cursor-pointer\n    items-center\n    justify-start\n    border-none\n    font-sans\n    font-medium;\n\n  text-align: unset;\n  flex: 1 0 auto;\n  &:hover {\n    @apply bg-foreground-2 text-color-1 fill-color-1;\n  }\n\n  &:focus {\n    @apply bg-foreground-2 text-color-1 fill-color-1 focus-inset;\n  }\n\n  &:active {\n    @apply bg-foreground-3;\n  }\n\n  .icon-container {\n    @apply pointer-events-none\n      m-0\n      flex\n      items-center\n      justify-center;\n    min-inline-size: theme(\"spacing.4\");\n    min-block-size: theme(\"spacing.4\");\n  }\n\n  .text-container {\n    @apply m-0\n      w-0\n      truncate\n      leading-6\n      opacity-0\n      transition-opacity\n      duration-150\n      ease-in-out;\n    transition-property: margin;\n    transition-property: inline-size;\n  }\n\n  .text-container--visible {\n    @apply w-auto flex-auto opacity-100;\n  }\n}\n\n:host([data-active]) .button {\n  @apply focus-inset;\n}\n\n:host([scale=\"s\"]) {\n  .button {\n    @apply text-n2h px-2 py-1 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.2\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  .button {\n    @apply text-n1h px-4 py-3 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.3\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  .button {\n    @apply text-0h p-5 font-normal;\n  }\n  .button--text-visible .icon-container {\n    margin-inline-end: theme(\"spacing.4\");\n  }\n}\n\n:host([alignment=\"center\"]) .button {\n  @apply justify-center;\n}\n\n:host([alignment=\"end\"]) .button {\n  @apply justify-end;\n}\n\n:host([alignment=\"center\"]),\n:host([alignment=\"end\"]) {\n  .button .text-container--visible {\n    @apply flex-initial;\n  }\n}\n\n// Compact\n:host([scale=\"s\"][compact]) .button,\n:host([scale=\"m\"][compact]) .button,\n:host([scale=\"l\"][compact]) .button {\n  @apply px-0;\n}\n\n.slot-container {\n  @apply flex;\n}\n\n.slot-container--hidden {\n  @apply hidden;\n}\n\n.button--text-visible {\n  @apply w-full;\n}\n\n:host([active]) .button,\n:host([active]) .button:hover,\n:host([active]) .button:focus,\n:host([active][loading]) .button {\n  @apply text-color-1 fill-color-1 bg-foreground-3;\n}\n\n:host([active]) .button:active {\n  @apply bg-foreground-1;\n}\n\n:host([appearance=\"transparent\"]) .button {\n  @apply bg-transparent;\n}\n\n:host([appearance=\"transparent\"][active]) .button,\n:host([appearance=\"transparent\"]) .button:hover,\n:host([appearance=\"transparent\"]) .button:focus {\n  background-color: var(--calcite-action-color-transparent-hover);\n}\n\n:host([appearance=\"transparent\"]) .button:active {\n  background-color: var(--calcite-action-color-transparent-press);\n}\n\n:host([appearance=\"transparent\"][disabled]) .button {\n  @apply bg-transparent;\n}\n\n:host([loading][appearance=\"solid\"]) .button,\n:host([loading][appearance=\"solid\"]) .button:hover,\n:host([loading][appearance=\"solid\"]) .button:focus {\n  @apply bg-foreground-1;\n  .text-container {\n    @apply opacity-disabled;\n  }\n}\n\n:host([loading]) calcite-loader[inline] {\n  @apply text-color-3;\n  margin-inline-end: theme(\"spacing.0\");\n}\n\n:host([disabled]) .button,\n:host([disabled]) .button:hover,\n:host([disabled]) .button:focus {\n  @apply opacity-disabled bg-foreground-1 cursor-default;\n}\n\n:host([disabled][active]) .button,\n:host([disabled][active]) .button:hover,\n:host([disabled][active]) .button:focus {\n  @apply opacity-disabled bg-foreground-3;\n}\n\n:host([appearance=\"transparent\"]) .button {\n  @apply bg-transparent\n    transition-shadow\n    duration-150\n    ease-in-out;\n}\n\n.indicator-with-icon {\n  @include action-indicator();\n}\n\n.indicator-without-icon {\n  @apply w-4 mx-1;\n  @include action-indicator();\n}\n\n.indicator-text {\n  @apply sr-only;\n}\n\n@include base-component();\n","import { Scale } from \"../components/interfaces\";\nimport { HTMLStencilElement } from \"@stencil/core/internal\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\n\nexport interface FetchIconProps {\n  icon: string;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nexport async function fetchIcon({ icon, scale }: FetchIconProps): Promise<CalciteIconPath> {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  const id = `${iconName}${size}${filled ? \"F\" : \"\"}`;\n\n  if (iconCache[id]) {\n    return iconCache[id];\n  }\n  if (!requestCache[id]) {\n    requestCache[id] = fetch(getAssetPath(`./assets/icon/${id}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${id}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[id];\n  iconCache[id] = path;\n\n  return path;\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Build, Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, scaleToPx } from \"./utils\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: string = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.waitUntilVisible(() => {\n      this.visible = true;\n      this.loadIconPathData();\n    });\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.loadIconPathData();\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!Build.isBrowser || !icon || !visible) {\n      return;\n    }\n\n    const pathData = await fetchIcon({ icon, scale });\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","import { getUserAgentString } from \"./browser\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst disabledElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n\n  if (isFirefox) {\n    const currentParent = getParentElement(component);\n    const trackedParent = disabledElementToParent.get(component.el);\n\n    if (trackedParent !== currentParent) {\n      removeInteractionListeners(trackedParent);\n      disabledElementToParent.set(component.el, currentParent);\n    }\n\n    addInteractionListeners(disabledElementToParent.get(component.el));\n    return;\n  }\n\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return (\n    component.el.parentElement || component.el\n  ); /* assume element is host if it has no parent when connected */\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n\n  if (isFirefox) {\n    removeInteractionListeners(disabledElementToParent.get(component.el));\n    disabledElementToParent.delete(component.el);\n    return;\n  }\n\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  restoreInteraction(component);\n}\n\nexport interface InteractiveContainerOptions extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport function InteractiveContainer(\n  { disabled }: InteractiveContainerOptions,\n  children: VNode[],\n): FunctionalComponent {\n  return (\n    <div class={CSS.container} inert={disabled}>\n      {...children}\n    </div>\n  );\n}\n","import { Build } from \"@stencil/core\";\n\ninterface NavigatorUAData {\n  brands: Array<{ brand: string; version: string }>;\n  mobile: boolean;\n  platform: string;\n}\n\nfunction getUserAgentData(): NavigatorUAData | undefined {\n  return (navigator as any).userAgentData;\n}\n\nexport function getUserAgentString(): string {\n  if (!Build.isBrowser) {\n    return \"\";\n  }\n\n  const uaData = getUserAgentData();\n\n  return uaData?.brands\n    ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \")\n    : navigator.userAgent;\n}\n"],"names":["CSS","SLOTS","Action","proxyCustomElement","HTMLElement","mutationObserver","createObserver","forceUpdate","this","guid","concat","indicatorId","buttonId","handleTooltipSlotChange","event","tooltip","target","assignedElements","flatten","filter","el","matches","referenceElement","buttonEl","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","_this$mutationObserve","connectInteractive","connectLocalized","connectMessages","observe","childList","subtree","componentWillLoad","setUpLoadableComponent","Build","isBrowser","setUpMessages","componentDidLoad","setComponentLoaded","disconnectedCallback","_this$mutationObserve2","disconnectInteractive","disconnectLocalized","disconnectMessages","disconnect","componentDidRender","updateHostInteraction","setFocus","_this$buttonEl","componentFocusable","focus","renderTextContainer","text","textEnabled","textContainerClasses","h","class","key","renderIndicatorText","indicator","messages","id","role","renderIconContainer","_el$children","loading","icon","scale","iconFlipRtl","loaderScale","calciteLoaderNode","inline","label","calciteIconNode","flipRtl","getIconScale","iconNode","hasIconToDisplay","children","length","slotContainerNode","render","active","compact","disabled","ariaLabel","buttonClasses","Host","InteractiveContainer","toAriaBoolean","ref","name","onSlotchange","componentScale","async","componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","iconCache","requestCache","scaleToPx","s","m","l","fetchIcon","_ref","size","numberLeadingName","isNaN","Number","charAt","parts","split","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","iconName","substring","fetch","getAssetPath","then","resp","json","catch","console","error","path","Icon","waitUntilVisible","visible","loadIconPathData","_this$intersectionObs","intersectionObserver","pathData","textLabel","dir","getElementDir","semantic","paths","svg","fill","height","viewBox","width","xmlns","d","opacity","callback","entries","forEach","entry","isIntersecting","rootMargin","isFirefox","test","uaData","navigator","userAgentData","brands","brand","version","userAgent","getUserAgentString","disabledElementToParent","WeakMap","interceptedClick","prototype","click","call","onPointerDown","interactiveElement","get","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","contains","document","activeElement","blur","blockInteraction","restoreInteraction","removeAttribute","currentParent","parentElement","getParentElement","trackedParent","removeInteractionListeners","set","addInteractionListeners","element","addEventListener","delete","removeEventListener","container","_ref2","inert"],"sourceRoot":""}